name: movie-picture-backend-build

on:
  workflow_dispatch:
      
  pull_request:
    branches:
      - main

jobs:
   lint-job:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        run: cd starter/backend && pip install pipenv

      - name: Perform a cache action to restore cache before dependency install
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: deps-python-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        run: cd starter/backend && pipenv install --dev

      - name: Python Linter
        run: cd starter/backend && pipenv run lint

   test-job:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        run: cd starter/backend && pip install pipenv

      - name: Perform a cache action to restore cache before dependency install
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: deps-python-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        run: cd starter/backend && pipenv install --dev


      - name: Test with pytest
        run: cd starter/backend && pipenv run test
        continue-on-error: false

    
   build-job:
    needs: [lint-job, test-job]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        run: cd starter/backend && pip install pipenv

      - name: Perform a cache action to restore cache before dependency install
        uses: actions/cache@v3
        with:
          path: ~/.local/share/virtualenvs
          key: deps-python-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        run: cd starter/backend && pipenv install --dev

     # - name: Set up Docker Buildx
     #  uses: docker/setup-buildx-action@v3

      - name: Test with pytest
        run: cd starter/backend && pipenv run test
        continue-on-error: false